function gcd(a, b) {
  // 만약 b가 0이라면, a가 최대공약수이므로 a를 반환
  if (b === 0) return a;
  // 그렇지 않은 경우, a를 b로 나눈 나머지를 구하고, b와 나머지를 인자로 재귀 호출
  // 이 과정은 b가 0이 될 때까지 반복됨
  return gcd(b, a % b);
  // gcd(24, 18 % 24)는 gcd(24, 18)로 대체됨
  // gcd(18, 24 % 18)는 gcd(18, 6)로 대체됨
  // gcd(6, 18 % 6)는 gcd(6, 0)로 대체됨
  // gcd(6, 0)은 b가 0이므로 a인 6을 반환
}

console.log(18, 24); // 6
console.log(gcd(10, 15)); // 5
console.log(gcd(10, 21)); // 1
console.log(gcd(24, 92)); // 4

// time complexity : O(log n) // O(log(min(a, b))
// space complexity : O(log n) // O(log(min(a, b))
